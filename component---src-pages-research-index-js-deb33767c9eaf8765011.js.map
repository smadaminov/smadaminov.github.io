{"version":3,"file":"component---src-pages-research-index-js-deb33767c9eaf8765011.js","mappings":"6MA+DA,EAvDqB,WACnB,IAkBMA,GAlBOC,EAAAA,EAAAA,gBAAe,cAkBRC,OAAOC,MAE3B,OACE,2BACE,0CACA,sBAAIC,MAAO,CAAEC,UAAU,SACpBL,EAAOM,KAAI,SAAAC,GACV,IAAMC,EAAQD,EAAME,YAAYD,MAEhC,OACE,sBAAIE,IAAKH,EAAMI,MACb,2BACEC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAMI,KAAMM,SAAS,OAC7B,wBAAMA,SAAS,YAAYT,KAG/B,6BACGD,EAAME,YAAYS,QAAQ,2BAC1BX,EAAME,YAAYU,MAFrB,KAE8BZ,EAAME,YAAYW,KAFhD,IAEuDb,EAAME,YAAYY,eCS3F,EApDgB,WACd,IAgBMC,GAhBOrB,EAAAA,EAAAA,gBAAe,aAgBNC,OAAOC,MAE7B,OACE,2BACE,qCACA,sBAAIC,MAAO,CAAEC,UAAU,SACpBiB,EAAShB,KAAI,SAAAiB,GACZ,IAAMJ,EAAQI,EAAQd,YAAYU,MAElC,OACE,sBAAIT,IAAKa,EAAQZ,MACf,2BACEC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIO,EAAQZ,KAAMM,SAAS,OAC/B,wBAAMA,SAAS,YAAYE,KAG/B,6BACGI,EAAQd,YAAYe,KADvB,KAC+BD,EAAQd,YAAYY,eCrBrE,EArBmB,SAAC,GAAwB,IAAD,EAArBI,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBrB,QAAxB,QAElB,OACE,gBAAC,IAAD,CAAQkB,SAAUA,EAAUlB,MAAOmB,EAAWG,SAAS,KACrD,gBAAC,EAAD,MACA,gBAAC,EAAD","sources":["webpack://gatsby-starter-blog/./src/components/publications.js","webpack://gatsby-starter-blog/./src/components/service.js","webpack://gatsby-starter-blog/./src/pages/research/index.js"],"sourcesContent":["/**\n * Publications component that queries for data\n *\n */\n\nimport * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nconst Publications = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(sort: {fields: frontmatter___date, order: DESC},\n             filter: {frontmatter: { type: {eq: \"paper\"}}}) {\n        nodes {\n          frontmatter {\n            date(formatString: \"YYYY\")\n            title\n            authors\n            venue\n            misc\n          }\n          id\n          slug\n        }\n      }\n    }\n`)\n  const papers = data.allMdx.nodes\n\n  return (\n    <div>\n      <h1>Publications</h1>\n      <ol style={{ listStyle: `none` }}>\n        {papers.map(paper => {\n          const title = paper.frontmatter.title\n\n          return (\n            <li key={paper.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={paper.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>\n                    {paper.frontmatter.authors}<br/>\n                    {paper.frontmatter.venue}. {paper.frontmatter.misc} {paper.frontmatter.date}\n                  </small>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </div>\n  )\n}\n\nexport default Publications\n","/**\n * Publications component that queries for data\n *\n */\n\nimport * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nconst Service = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(sort: {fields: frontmatter___date, order: DESC},\n             filter: {frontmatter: { type: {eq: \"service\"}}}) {\n        nodes {\n          frontmatter {\n            date(formatString: \"YYYY\")\n            role\n            venue\n          }\n          id\n          slug\n        }\n      }\n    }\n`)\n  const services = data.allMdx.nodes\n\n  return (\n    <div>\n      <h1>Service</h1>\n      <ol style={{ listStyle: `none` }}>\n        {services.map(service => {\n          const venue = service.frontmatter.venue\n\n          return (\n            <li key={service.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={service.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{venue}</span>\n                    </Link>\n                  </h2>\n                  <small>\n                    {service.frontmatter.role}. {service.frontmatter.date}\n                  </small>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </div>\n  )\n}\n\nexport default Service\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from \"../../components/layout\"\nimport Publications from \"../../components/publications\"\nimport Service from \"../../components/service\"\n\nconst MyResearch = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle} navValue=\"2\">\n      <Publications />\n      <Service />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default MyResearch\n"],"names":["papers","useStaticQuery","allMdx","nodes","style","listStyle","map","paper","title","frontmatter","key","slug","className","itemScope","itemType","Link","to","itemProp","authors","venue","misc","date","services","service","role","data","location","siteTitle","site","siteMetadata","navValue"],"sourceRoot":""}